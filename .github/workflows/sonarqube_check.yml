name: Build and Analyze

on:
  push:
    branches:
      - main
      - stage_jorge

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # InstalaciÃ³n de dependencias
      - name: Install dependencies
        run: npm install

      # Ejecutar pruebas y generar coverage
      - name: Run tests and generate coverage
        run: npm test

      # Escanear con SonarQube e incluir cobertura
      - name: SonarQube Scan with Coverage
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.sources=src
            -Dsonar.tests=test
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.test.inclusions=test/**/*.test.js
            -Dsonar.exclusions=node_modules/**,coverage/**

      # Quality Gate
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
          
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: "SonarQube Quality Gate Status"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      - name: Fail if Quality Gate failed
        if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status == 'FAILED'
        run: |
          echo "Quality Gate FAILED"
          exit 1

      - name: Warn if Quality Gate status is WARN
        if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status == 'WARN'
        run: echo "Quality Gate status is WARN"
